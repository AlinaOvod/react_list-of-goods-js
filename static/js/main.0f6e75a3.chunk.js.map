{"version":3,"sources":["App.jsx","index.jsx"],"names":["goodsFromServer","SORT_BY_ALP","SORT_BY_LENGTH","App","useState","sortField","setSortField","reversed","setReversed","visibleGoods","goods","prepearedGoods","sort","good1","good2","localeCompare","length","reverse","getPreparedGoods","className","onClick","type","cn","map","good","ReactDOM","render","document","getElementById"],"mappings":"iPAMaA,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAGIC,EAAc,iBACdC,EAAiB,SA0BhB,IAAMC,EAAM,WACjB,MAAkCC,mBAAS,IAA3C,mBAAOC,EAAP,KAAkBC,EAAlB,KACA,EAAgCF,oBAAS,GAAzC,mBAAOG,EAAP,KAAiBC,EAAjB,KACMC,EA3BR,SAA0BC,EAA1B,GAA2D,IAAxBL,EAAuB,EAAvBA,UAAWE,EAAY,EAAZA,SACtCI,EAAc,YAAOD,GAoB3B,OAlBIL,GACFM,EAAeC,MAAK,SAACC,EAAOC,GAC1B,OAAQT,GACN,KAAKJ,EACH,OAAOY,EAAME,cAAcD,GAE7B,KAAKZ,EACH,OAAOW,EAAMG,OAASF,EAAME,OAC9B,QACE,OAAO,MAKXT,GACFI,EAAeM,UAGVN,EAMcO,CACnBlB,EACA,CAAEK,YAAWE,aAGf,OACE,sBAAKY,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,QAAS,kBAAMd,EAAaL,IAC5BoB,KAAK,SACLF,UAAS,yBAAoBG,IAAG,CAAE,WAAYjB,IAAcJ,KAH9D,iCAQA,wBACEmB,QAAS,kBAAMd,EAAaJ,IAC5BmB,KAAK,SACLF,UAAS,4BAAuBG,IAAG,CAAE,WAAYjB,IAAcH,KAHjE,4BAQA,wBACEkB,QAAS,kBAAMZ,GAAaD,IAC5Bc,KAAK,SACLF,UAAS,4BAAuBG,IAAG,CAAE,YAAyB,IAAbf,KAHnD,sBAQEF,GAAaE,IACb,wBACEa,QAAS,WACPd,EAAa,IACbE,GAAY,IAEda,KAAK,SACLF,UAAU,4BANZ,sBAaJ,6BACGV,EAAac,KAAI,SAAAC,GAAI,OACpB,oBAAI,UAAQ,OAAZ,SAA+BA,GAAPA,YC9FlCC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.0f6e75a3.chunk.js","sourcesContent":["import { useState } from 'react';\n\nimport 'bulma/css/bulma.css';\nimport './App.scss';\nimport cn from 'classnames';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nconst SORT_BY_ALP = 'alphabetically';\nconst SORT_BY_LENGTH = 'length';\n\nfunction getPreparedGoods(goods, { sortField, reversed }) {\n  const prepearedGoods = [...goods];\n\n  if (sortField) {\n    prepearedGoods.sort((good1, good2) => {\n      switch (sortField) {\n        case SORT_BY_ALP:\n          return good1.localeCompare(good2);\n\n        case SORT_BY_LENGTH:\n          return good1.length - good2.length;\n        default:\n          return 0;\n      }\n    });\n  }\n\n  if (reversed) {\n    prepearedGoods.reverse();\n  }\n\n  return prepearedGoods;\n}\n\nexport const App = () => {\n  const [sortField, setSortField] = useState('');\n  const [reversed, setReversed] = useState(false);\n  const visibleGoods = getPreparedGoods(\n    goodsFromServer,\n    { sortField, reversed },\n  );\n\n  return (\n    <div className=\"section content\">\n      <div className=\"buttons\">\n        <button\n          onClick={() => setSortField(SORT_BY_ALP)}\n          type=\"button\"\n          className={`button is-info ${cn({ 'is-light': sortField !== SORT_BY_ALP })}`}\n        >\n          Sort alphabetically\n        </button>\n\n        <button\n          onClick={() => setSortField(SORT_BY_LENGTH)}\n          type=\"button\"\n          className={`button is-success ${cn({ 'is-light': sortField !== SORT_BY_LENGTH })}`}\n        >\n          Sort by length\n        </button>\n\n        <button\n          onClick={() => setReversed(!reversed)}\n          type=\"button\"\n          className={`button is-warning ${cn({ 'is-light': reversed === false })}`}\n        >\n          Reverse\n        </button>\n\n        {(sortField || reversed) && (\n          <button\n            onClick={() => {\n              setSortField('');\n              setReversed(false);\n            }}\n            type=\"button\"\n            className=\"button is-danger is-light\"\n          >\n            Reset\n          </button>\n        )}\n      </div>\n\n      <ul>\n        {visibleGoods.map(good => (\n          <li data-cy=\"Good\" key={good}>{good}</li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}